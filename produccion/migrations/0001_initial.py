# Generated by Django 5.0.6 on 2025-05-24 14:40

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('avicola', '0001_initial'),
        ('inventario', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Granja',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_granja', models.CharField(max_length=50, unique=True, verbose_name='Código de Granja')),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre de la Granja')),
                ('direccion', models.TextField(verbose_name='Dirección')),
                ('ubicacion_geografica', models.CharField(blank=True, max_length=100, verbose_name='Ubicación Geográfica')),
                ('telefono', models.CharField(blank=True, max_length=20, verbose_name='Teléfono')),
                ('capacidad_total_aves', models.PositiveIntegerField(default=0, verbose_name='Capacidad Total de Aves')),
                ('estado', models.CharField(choices=[('ACTIVA', 'Activa'), ('INACTIVA', 'Inactiva'), ('MANTENIMIENTO', 'En Mantenimiento')], default='ACTIVA', max_length=20, verbose_name='Estado de la Granja')),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='avicola.empresa', verbose_name='Empresa Propietaria')),
                ('encargado', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='granjas_encargadas', to=settings.AUTH_USER_MODEL, verbose_name='Encargado Principal')),
            ],
            options={
                'verbose_name': 'Granja',
                'verbose_name_plural': 'Granjas',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Galpon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_galpon', models.CharField(max_length=20, verbose_name='Número o Identificador del Galpón')),
                ('tipo_galpon', models.CharField(choices=[('CRIA', 'Cría'), ('RECRIA', 'Recría'), ('PRODUCCION', 'Producción'), ('CUARENTENA', 'Cuarentena')], default='PRODUCCION', max_length=20, verbose_name='Tipo de Galpón')),
                ('capacidad_aves', models.PositiveIntegerField(verbose_name='Capacidad Máxima de Aves')),
                ('area_metros_cuadrados', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Área (m²)')),
                ('responsable', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='galpones_responsable', to=settings.AUTH_USER_MODEL, verbose_name='Responsable del Galpón')),
                ('granja', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='galpones', to='produccion.granja', verbose_name='Granja Asociada')),
            ],
            options={
                'verbose_name': 'Galpón',
                'verbose_name_plural': 'Galpones',
                'ordering': ['granja', 'numero_galpon'],
                'unique_together': {('granja', 'numero_galpon')},
            },
        ),
        migrations.CreateModel(
            name='Lote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_inicio', models.DateField(verbose_name='Fecha de Inicio del Lote')),
                ('fecha_ingreso', models.DateField(blank=True, null=True, verbose_name='Fecha de Ingreso')),
                ('cantidad_inicial_aves', models.PositiveIntegerField(verbose_name='Cantidad Inicial de Aves')),
                ('edad_inicial_semanas', models.PositiveIntegerField(default=0, verbose_name='Edad Inicial (Semanas)')),
                ('edad_semanas', models.PositiveIntegerField(default=0, verbose_name='Edad Actual (Semanas)')),
                ('estado', models.CharField(choices=[('INICIAL', 'Inicial'), ('CRECIMIENTO', 'Crecimiento'), ('PRODUCCION', 'Producción'), ('FINALIZACION', 'Finalización')], default='INICIAL', max_length=20, verbose_name='Estado del Lote')),
                ('codigo_lote', models.CharField(max_length=50, unique=True, verbose_name='Código de Lote')),
                ('alimento', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventario.alimento', verbose_name='Alimento Base')),
                ('galpon', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='lotes', to='produccion.galpon', verbose_name='Galpón Asignado')),
                ('raza', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='inventario.raza', verbose_name='Raza de Aves')),
            ],
            options={
                'verbose_name': 'Lote',
                'verbose_name_plural': 'Lotes',
                'ordering': ['-fecha_ingreso', 'codigo_lote'],
            },
        ),
        migrations.CreateModel(
            name='SeguimientoDiario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_seguimiento', models.DateField(verbose_name='Fecha de Seguimiento')),
                ('tipo_seguimiento', models.CharField(choices=[('PRODUCCION', 'Producción de Huevos'), ('ENGORDE', 'Engorde de Pollos'), ('MIXTO', 'Producción y Engorde')], default='PRODUCCION', max_length=20, verbose_name='Tipo de Seguimiento')),
                ('huevos_totales', models.PositiveIntegerField(default=0, verbose_name='Huevos Totales')),
                ('huevos_rotos', models.PositiveIntegerField(default=0, verbose_name='Huevos Rotos')),
                ('huevos_sucios', models.PositiveIntegerField(default=0, verbose_name='Huevos Sucios')),
                ('peso_promedio_ave', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='Peso Promedio (kg)')),
                ('consumo_alimento_kg', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Consumo de Alimento (kg)')),
                ('consumo_agua_litros', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Consumo de Agua (L)')),
                ('temperatura_min', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True, verbose_name='Temperatura Mínima (°C)')),
                ('temperatura_max', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True, verbose_name='Temperatura Máxima (°C)')),
                ('humedad', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Humedad (%)')),
                ('mortalidad', models.PositiveIntegerField(default=0, verbose_name='Mortalidad del Día')),
                ('causa_mortalidad', models.CharField(blank=True, max_length=200, verbose_name='Causa de Mortalidad')),
                ('observaciones', models.TextField(blank=True, verbose_name='Observaciones')),
                ('lote', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seguimientos_diarios', to='produccion.lote', verbose_name='Lote')),
                ('registrado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Registrado Por')),
            ],
            options={
                'verbose_name': 'Seguimiento Diario',
                'verbose_name_plural': 'Seguimientos Diarios',
                'ordering': ['-fecha_seguimiento'],
                'unique_together': {('lote', 'fecha_seguimiento')},
            },
        ),
        migrations.CreateModel(
            name='SeguimientoEngorde',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ganancia_diaria_peso', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='Ganancia Diaria de Peso (g)')),
                ('conversion_alimenticia', models.DecimalField(decimal_places=2, max_digits=4, verbose_name='Conversión Alimenticia')),
                ('uniformidad', models.CharField(choices=[('EXCELENTE', 'Excelente (>90%)'), ('BUENA', 'Buena (80-90%)'), ('REGULAR', 'Regular (70-80%)'), ('DEFICIENTE', 'Deficiente (<70%)')], max_length=20, verbose_name='Uniformidad del Lote')),
                ('indice_productividad', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='Índice de Productividad')),
                ('eficiencia_energetica', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='Eficiencia Energética (kcal/g)')),
                ('eficiencia_proteica', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='Eficiencia Proteica (g/g)')),
                ('consumo_proteina', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='Consumo de Proteína (g)')),
                ('consumo_energia', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Consumo de Energía (kcal)')),
                ('relacion_energia_proteina', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='Relación Energía/Proteína')),
                ('longitud_corporal', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Longitud Corporal (cm)')),
                ('ancho_pechuga', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Ancho de Pechuga (cm)')),
                ('calidad_plumaje', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Calidad del Plumaje (1-5)')),
                ('calidad_patas', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Calidad de Patas (1-5)')),
                ('observaciones_engorde', models.TextField(blank=True, verbose_name='Observaciones de Engorde')),
                ('seguimiento_diario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='detalle_engorde', to='produccion.seguimientodiario', verbose_name='Seguimiento Diario')),
            ],
            options={
                'verbose_name': 'Seguimiento de Engorde',
                'verbose_name_plural': 'Seguimientos de Engorde',
            },
        ),
        migrations.CreateModel(
            name='ConsumoEnergia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_registro', models.DateField(verbose_name='Fecha de Registro')),
                ('hora_inicio', models.TimeField(verbose_name='Hora de Inicio')),
                ('hora_fin', models.TimeField(verbose_name='Hora de Fin')),
                ('consumo_kwh', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Consumo (kWh)')),
                ('temperatura_ambiente', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Temperatura Ambiente (°C)')),
                ('humedad_relativa', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Humedad Relativa (%)')),
                ('observaciones', models.TextField(blank=True, verbose_name='Observaciones')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Última Actualización')),
                ('registrado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Registrado por')),
                ('galpon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consumos_energia', to='produccion.galpon', verbose_name='Galpón')),
            ],
            options={
                'verbose_name': 'Consumo de Energía',
                'verbose_name_plural': 'Consumos de Energía',
                'ordering': ['-fecha_registro', 'galpon'],
                'unique_together': {('galpon', 'fecha_registro', 'hora_inicio', 'hora_fin')},
            },
        ),
        migrations.CreateModel(
            name='MortalidadDiaria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField(verbose_name='Fecha')),
                ('cantidad_muertes', models.PositiveIntegerField(verbose_name='Número de Aves Muertas')),
                ('causa', models.CharField(blank=True, max_length=200, verbose_name='Causa de Muerte')),
                ('lote', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mortalidades_diarias', to='produccion.lote', verbose_name='Lote')),
            ],
            options={
                'verbose_name': 'Mortalidad Diaria',
                'verbose_name_plural': 'Mortalidades Diarias',
                'ordering': ['-fecha'],
                'unique_together': {('lote', 'fecha')},
            },
        ),
        migrations.CreateModel(
            name='MortalidadSemanal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semana', models.PositiveIntegerField(verbose_name='Número de Semana')),
                ('anio', models.PositiveIntegerField(verbose_name='Año')),
                ('total_muertes', models.PositiveIntegerField(verbose_name='Total de Muertes en la Semana')),
                ('porcentaje_mortalidad', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Porcentaje de Mortalidad')),
                ('lote', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mortalidades_semanales', to='produccion.lote', verbose_name='Lote')),
            ],
            options={
                'verbose_name': 'Mortalidad Semanal',
                'verbose_name_plural': 'Mortalidades Semanales',
                'ordering': ['-anio', '-semana'],
                'unique_together': {('lote', 'semana', 'anio')},
            },
        ),
    ]
